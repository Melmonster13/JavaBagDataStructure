// Bag.java pseudocode
Class Bag<T>
    elements = HashMap<T, Integer>

    Constructor():
        elements = new HashMap

    add(item):
        elements[item] = elements.getOrDefault(item, 0) + 1

    size():
        totalSize = 0
        for each count in elements:
            totalSize += count
        return totalSize

    merge(otherBag):
        for each (item, count) in otherBag.elements:
            elements[item] = elements.getOrDefault(item, 0) + count

    distinct():
        newBag = new Bag<T>
            for each item in elements:
                newBag.add(item)
            return newBag

    toString():
        result = "Bag contents: "
        for each (item, count) in elements:
            append "item(count) " to result
        return result

// BagUsage.java pseudocode
Class BagUsage
    main():
        bag1 = new Bag<String>
        bag2 = new Bag<String>

        add "kitten" to bag1
        add "snake" to bag1
        add "kitten" to bag1
        add "dinosaur" to bag1

        add "mouse" to bag2
        add "fox" to bag2
        add "kitten" to bag2

        print "Bag1 size: " + size of bag1
        print "Bag2 size: " + size of bag2

        merge bag2 into bag1
        print "\nBag1 and Bag2 merged:"
        print bag1

        distinctBag = bag1.distinct()
        print "\nDistinct items in Bag1:"
        print distinctBag